(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{375:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return p});var a=t(7),r=t.n(a),s=t(8),o=t.n(s),c=t(9),i=t.n(c),d=t(27),u=t.n(d),l=t(10),g=t.n(l),m=t(48),f=t.n(m),p=function(n){function e(){var n,a;r()(this,e);for(var s=arguments.length,c=new Array(s),d=0;d<s;d++)c[d]=arguments[d];return a=o()(this,(n=i()(e)).call.apply(n,[this].concat(c))),f()(u()(a),"document",function(){return{document:t(644),className:"message-page"}}),a}return g()(e,n),e}(t(610).a)},610:function(n,e,t){"use strict";t.d(e,"a",function(){return w});var a=t(7),r=t.n(a),s=t(11),o=t.n(s),c=t(8),i=t.n(c),d=t(9),u=t.n(d),l=t(10),g=t.n(l),m=t(0),f=t.n(m),p=t(613),h=t.n(p),v=t(614),M=t.n(v),w=(t(615),t(611),function(n){function e(){return r()(this,e),i()(this,u()(e).apply(this,arguments))}return g()(e,n),o()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){var a=new h.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'.concat(n,"</thead><tbody>").concat(e,"</tbody></table></div>")},a.code=function(n,e){var t=!(!e||!M.a.getLanguage(e))?M.a.highlight(e,n).value:n;return'<pre><code class="hljs '.concat(e,'">').concat(t,"</code></pre>")};var r=h()(e,{renderer:a});return f.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:r}})}return f.a.createElement("span",null)}}]),e}(m.Component))},611:function(n,e,t){},644:function(n,e){n.exports="# 消息 Message\n\n\n\n## 基本用法\n```jsx\nimport { Message, Icon } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Message>普通</Message>\n        <Message theme=\"danger\">自定义主题</Message>\n        <Message icon={<Icon type=\"wrong-round\" />}>自定义图标</Message>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 可操作\n```jsx\nimport { Message } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Message hasArrow onClick={() => alert('click this message!')}>链接样式</Message>\n        <Message closable>可关闭</Message>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| theme | string | 'primary' | 主题，可选值 `default`、`primary`、`success`、`warning`、`danger` |\n| size | string | 'md' | 设置大小，可选值为 `md`、`lg` |\n| icon | ReactNode | - | 设置图标 |\n| closable | boolean | false | 是否显示关闭按钮 |\n| hasArrow | boolean | false | 是否显示箭头 |\n| onClick | () => void | - | 点击后触发的回调函数 |\n"}}]);