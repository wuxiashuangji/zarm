(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{374:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return v});var a=t(7),r=t.n(a),o=t(8),s=t.n(o),i=t(9),c=t.n(i),l=t(27),u=t.n(l),d=t(10),m=t.n(d),h=t(48),p=t.n(h),v=function(n){function e(){var n,a;r()(this,e);for(var o=arguments.length,i=new Array(o),l=0;l<o;l++)i[l]=arguments[l];return a=s()(this,(n=c()(e)).call.apply(n,[this].concat(i))),p()(u()(a),"document",function(){return{document:t(643),className:"mask-page"}}),a}return m()(e,n),e}(t(610).a)},610:function(n,e,t){"use strict";t.d(e,"a",function(){return k});var a=t(7),r=t.n(a),o=t(11),s=t.n(o),i=t(8),c=t.n(i),l=t(9),u=t.n(l),d=t(10),m=t.n(d),h=t(0),p=t.n(h),v=t(613),f=t.n(v),g=t(614),b=t.n(g),k=(t(615),t(611),function(n){function e(){return r()(this,e),c()(this,u()(e).apply(this,arguments))}return m()(e,n),s()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){var a=new f.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'.concat(n,"</thead><tbody>").concat(e,"</tbody></table></div>")},a.code=function(n,e){var t=!(!e||!b.a.getLanguage(e))?b.a.highlight(e,n).value:n;return'<pre><code class="hljs '.concat(e,'">').concat(t,"</code></pre>")};var r=f()(e,{renderer:a});return p.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:r}})}return p.a.createElement("span",null)}}]),e}(h.Component))},611:function(n,e,t){},643:function(n,e){n.exports="# 遮罩 Mask\n\n\n\n## 基本用法\n```jsx\nimport { Cell, Button, Mask } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n    }\n  }\n\n  toggle() {\n    this.setState({ visible: !this.state.visible });\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          title=\"默认\"\n          description={<Button size=\"sm\" onClick={() => this.toggle()}>开启</Button>}\n        />\n        <Mask visible={this.state.visible} onClick={() => this.toggle()} />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 必填 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| visible | boolean | 否 | false | 是否显示 |\n| type | 'normal' \\| 'transparent' | 否 | 'normal' | 类型 |\n| onClick | MouseEventHandler<HTMLDivElement\\> | 否 | \\&nbsp; | 点击后触发的回调函数 |\n"}}]);