(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{384:function(n,e,a){"use strict";a.r(e),a.d(e,"default",function(){return m});var o=a(7),d=a.n(o),i=a(8),t=a.n(i),r=a(9),l=a.n(r),u=a(27),s=a.n(u),c=a(10),R=a.n(c),p=a(48),v=a.n(p),m=function(n){function e(){var n,o;d()(this,e);for(var i=arguments.length,r=new Array(i),u=0;u<i;u++)r[u]=arguments[u];return o=t()(this,(n=l()(e)).call.apply(n,[this].concat(r))),v()(s()(o),"document",function(){return{document:a(653),className:"radio-page"}}),o}return R()(e,n),e}(a(610).a)},610:function(n,e,a){"use strict";a.d(e,"a",function(){return h});var o=a(7),d=a.n(o),i=a(11),t=a.n(i),r=a(8),l=a.n(r),u=a(9),s=a.n(u),c=a(10),R=a.n(c),p=a(0),v=a.n(p),m=a(613),b=a.n(m),C=a(614),f=a.n(C),h=(a(615),a(611),function(n){function e(){return d()(this,e),l()(this,s()(e).apply(this,arguments))}return R()(e,n),t()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,a=n.className;if("string"==typeof e){var o=new b.a.Renderer;o.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'.concat(n,"</thead><tbody>").concat(e,"</tbody></table></div>")},o.code=function(n,e){var a=!(!e||!f.a.getLanguage(e))?f.a.highlight(e,n).value:n;return'<pre><code class="hljs '.concat(e,'">').concat(a,"</code></pre>")};var d=b()(e,{renderer:o});return v.a.createElement("div",{className:a,dangerouslySetInnerHTML:{__html:d}})}return v.a.createElement("span",null)}}]),e}(p.Component))},611:function(n,e,a){},653:function(n,e){n.exports='# 单选框 Radio\n\n\n\n## 基本用法\n```jsx\nimport { Radio, Cell } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell><Radio>普通</Radio></Cell>\n        <Cell><Radio defaultChecked>默认选中</Radio></Cell>\n        <Cell><Radio disabled>禁用</Radio></Cell>\n        <Cell><Radio defaultChecked disabled>选中且禁用</Radio></Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 按钮样式\n```jsx\nimport { Radio, Cell } from \'zarm\';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      radio: \'0\',\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Radio.Group\n              type="button"\n              value={this.state.radio}\n              onChange={value => console.log(`radio to ${value}`)}\n            >\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          普通\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button" defaultValue="1">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          指定默认值\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2" disabled>选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          禁用指定项\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button" shape="rect">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          直角\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button" shape="round">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          椭圆角\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 块级样式\n```jsx\nimport { Radio } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div className="block-box">\n        <Radio.Group block compact type="button" shape="radius">\n          <Radio value="0">选项一</Radio>\n          <Radio value="1">选项二</Radio>\n          <Radio value="2">选项三</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 列表样式\n```jsx\nimport { Radio } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Radio.Group type="cell">\n          <Radio value="0">选项一</Radio>\n          <Radio value="1">选项二</Radio>\n          <Radio value="2" disabled>选项三（禁止选择）</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 列表样式禁用状态\n```jsx\nimport { Radio } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Radio.Group disabled type="cell">\n          <Radio value="0">选项一</Radio>\n          <Radio value="1">选项二</Radio>\n          <Radio value="2">选项三</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n### Radio\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| type | string | - | 显示类型，可选值 `button`, `cell` |\n| value | string \\| number | - | 值 |\n| checked | boolean | - | 当前是否选中 |\n| shape | string | \'radius\' | 形状，可选值 `rect`, `radius`, `round` | \n| defaultChecked | boolean | - | 初始是否选中 |\n| disabled | boolean | false | 是否禁用 |\n| onChange | (checked?: boolean) => void | - | 值变化时触发的回调函数 |\n\n### Radio.Group\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| type | string | - | 显示类型，可选值 `button`, `cell` |\n| value | string \\| number | - | 选中值 |\n| defaultValue | string \\| number | - | 初始选中值 |\n| shape | string | \'radius\' | 形状，可选值 `rect`, `radius`, `round` | \n| block | boolean | false | 是否为块级元素 |\n| disabled | boolean | false | 是否禁用 |\n| compact | boolean | false | 是否启用紧凑模式 |\n| onChange | (value?: string \\| number) => void | - | 值变化时触发的回调函数 |\n'}}]);