(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{389:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return v});var a=t(7),r=t.n(a),c=t(8),o=t.n(c),l=t(9),i=t.n(l),s=t(27),u=t.n(s),d=t(10),h=t.n(d),p=t(48),f=t.n(p),v=function(n){function e(){var n,a;r()(this,e);for(var c=arguments.length,l=new Array(c),s=0;s<c;s++)l[s]=arguments[s];return a=o()(this,(n=i()(e)).call.apply(n,[this].concat(l))),f()(u()(a),"document",function(){return{document:t(658),className:"switch-page"}}),a}return h()(e,n),e}(t(610).a)},610:function(n,e,t){"use strict";t.d(e,"a",function(){return w});var a=t(7),r=t.n(a),c=t(11),o=t.n(c),l=t(8),i=t.n(l),s=t(9),u=t.n(s),d=t(10),h=t.n(d),p=t(0),f=t.n(p),v=t(613),m=t.n(v),g=t(614),C=t.n(g),w=(t(615),t(611),function(n){function e(){return r()(this,e),i()(this,u()(e).apply(this,arguments))}return h()(e,n),o()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){var a=new m.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'.concat(n,"</thead><tbody>").concat(e,"</tbody></table></div>")},a.code=function(n,e){var t=!(!e||!C.a.getLanguage(e))?C.a.highlight(e,n).value:n;return'<pre><code class="hljs '.concat(e,'">').concat(t,"</code></pre>")};var r=m()(e,{renderer:a});return f.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:r}})}return f.a.createElement("span",null)}}]),e}(p.Component))},611:function(n,e,t){},658:function(n,e){n.exports="# 开关 Switch\n\n\n\n## 基本用法\n```jsx\nimport { Switch, Cell } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: false,\n    };\n  }\n\n  toggle(value) {\n    this.setState({\n      value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Switch\n              checked={this.state.value}\n              onChange={(value) => {\n                this.setState({ value });\n              }}\n            />\n          }\n        >\n          普通\n        </Cell>\n        <Cell description={<Switch defaultChecked />}>默认开</Cell>\n        <Cell description={<Switch disabled />}>禁用的开关（默认关）</Cell>\n        <Cell description={<Switch defaultChecked disabled />}>禁用的开关（默认开）</Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| checked | boolean | - | 值 |\n| defaultChecked | boolean | - | 初始值 |\n| disabled | boolean | false | 是否禁用 |\n| onChange | (value?: boolean) => void | - | 值变化时触发的回调函数 |\n"}}]);