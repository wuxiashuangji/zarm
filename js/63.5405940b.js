(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{608:function(n,o,t){"use strict";t.r(o),t.d(o,"default",function(){return f});var e=t(7),i=t.n(e),s=t(8),a=t.n(s),l=t(9),r=t.n(l),c=t(27),d=t.n(c),u=t(10),m=t.n(u),p=t(48),C=t.n(p),v=t(616),f=(t(938),function(n){function o(){var n,e;i()(this,o);for(var s=arguments.length,l=new Array(s),c=0;c<s;c++)l[c]=arguments[c];return e=a()(this,(n=r()(o)).call.apply(n,[this].concat(l))),C()(d()(e),"document",function(){return{document:t(660),className:"toast-page"}}),e}return m()(o,n),o}(v.a))},660:function(n,o){n.exports='# 轻提示 Toast\n\n\n\n## 基本用法\n```jsx\nimport { Toast, Cell, Button, Icon } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Toast.show(\'默认3秒自动关闭\');\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          普通\n        </Cell>\n\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Toast.show(\'指定10秒后自动关闭\', 10000);\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          指定停留时间\n        </Cell>\n\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Toast.show(\n                  <div className="box">\n                    <Icon className="box-icon" type="right-round-fill" />\n                    <div className="box-text">\n                      预约成功\n                    </div>\n                  </div>\n                );\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          自定义内容\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 加载中\n```jsx\nimport { Loading, Cell, Button } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Loading.show();\n                setTimeout(()=>{\n                  Loading.hide();\n                }, 1100);\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          Loading\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| visible | boolean | false | 是否显示 |\n| stayTime | number | 3000 | 自动关闭前停留的时间（单位：毫秒） |\n| onClose | () => void | - | 关闭时触发的回调函数 |\n| onMaskClick | () => void | - | 点击遮罩层时触发的回调函数 |\n'},938:function(n,o,t){}}]);