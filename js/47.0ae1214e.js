(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{579:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return f});var a=t(7),l=t.n(a),i=t(8),s=t.n(i),u=t(9),d=t.n(u),o=t(27),r=t.n(o),c=t(10),m=t.n(c),v=t(48),p=t.n(v),D=t(616),f=(t(906),function(n){function e(){var n,a;l()(this,e);for(var i=arguments.length,u=new Array(i),o=0;o<i;o++)u[o]=arguments[o];return a=s()(this,(n=d()(e)).call.apply(n,[this].concat(u))),p()(r()(a),"document",function(){return{document:t(631),className:"calendar-page"}}),a}return m()(e,n),e}(D.a))},631:function(n,e){n.exports="# 日历 Calendar\n\n## 平铺选择\n\n```jsx\nimport { Button, Select, Icon, Input, Cell, Calendar } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      multiple: true,\n      defaultValue: ['2018-11-21', '2018-12-7'],\n      value: '',\n      min: '2018-5-12',\n      max: '2019-5-11',\n      dateRender: date => {\n        if (/(0|6)/.test(date.getDay())) {\n          return (\n            <div className=\"custom\">\n              <div className=\"custom-date\">{date.getDate()}</div>\n              <div className=\"custom-text\">休息</div>\n            </div>\n          );\n        }\n        return date.getDate();\n      },\n      disabledDate: date => /(0|6)/.test(date.getDay())\n    };\n  }\n\n  render() {\n    const { multiple, min, max, visible } = this.state;\n\n    return (\n      <div>\n        <div>\n          <Cell hasArrow title=\"multiple\">\n            <Select\n              visible={visible}\n              placeholder=\"multiple\"\n              value={multiple ? 'true' : 'false'}\n              dataSource={[\n                {\n                  value: 'false',\n                  label: '单选'\n                },\n                {\n                  value: 'true',\n                  label: '双选'\n                }\n              ]}\n              onOk={selected => {\n                this.setState({\n                  multiple: selected[0].value === 'true',\n                  visible: false\n                });\n              }}\n            />\n          </Cell>\n          <Cell title=\"min\">\n            <Input\n              type=\"text\"\n              placeholder=\"请输入日历起始日期\"\n              value={min}\n              onBlur={e => this.setState({ min: e })}\n            />\n          </Cell>\n          <Cell title=\"max\">\n            <Input\n              type=\"text\"\n              placeholder=\"请输入日历终止日期\"\n              value={max}\n              onBlur={e => this.setState({ max: e })}\n            />\n          </Cell>\n        </div>\n        <div>\n          <Calendar\n            {...this.state}\n            onChange={value => {\n              this.setState({ value });\n              console.log('onChange', value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| value | Date \\| Date[] | - | 值 |\n| defaultValue | Date \\| Date[] | - | 初始值 |\n| min | Date | new Date() | 最小可选日期 |\n| max | Date | min + 1 年 | 最大可选日期 |\n| multiple | boolean | false | 是否双选 |\n| dateRender | (date?: Date) => void | date => date.getDate() | 日期渲染函数 |\n| disabledDate | (date?: Date) => boolean | () => false | 日期是否禁止选择 |\n| onChange | (value?: Date[]) => void | - | 日期选择发生变化时触发的回调函数 |\n"},906:function(n,e,t){}}]);